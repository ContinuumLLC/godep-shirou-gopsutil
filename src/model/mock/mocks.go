// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ContinuumLLC/platform-asset-plugin/src/model (interfaces: HandlerDependencies,AssetService,AssetServiceFactory,AssetServiceDependencies,AssetDal,AssetDalFactory,AssetDalDependencies,ConfigServiceFactory,ConfigService,ConfigDal,ConfigDalDependencies,ConfigDalFactory,ConfigServiceDependencies)

package mock

import (
	io "io"

	asset "github.com/ContinuumLLC/platform-api-model/clients/model/Golang/resourceModel/asset"
	model "github.com/ContinuumLLC/platform-asset-plugin/src/model"
	clar "github.com/ContinuumLLC/platform-common-lib/src/clar"
	env "github.com/ContinuumLLC/platform-common-lib/src/env"
	json "github.com/ContinuumLLC/platform-common-lib/src/json"
	protocol "github.com/ContinuumLLC/platform-common-lib/src/plugin/protocol"
	procParser "github.com/ContinuumLLC/platform-common-lib/src/procParser"
	gomock "github.com/golang/mock/gomock"
)

// MockHandlerDependencies is a mock of HandlerDependencies interface
type MockHandlerDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerDependenciesMockRecorder
}

// MockHandlerDependenciesMockRecorder is the mock recorder for MockHandlerDependencies
type MockHandlerDependenciesMockRecorder struct {
	mock *MockHandlerDependencies
}

// NewMockHandlerDependencies creates a new mock instance
func NewMockHandlerDependencies(ctrl *gomock.Controller) *MockHandlerDependencies {
	mock := &MockHandlerDependencies{ctrl: ctrl}
	mock.recorder = &MockHandlerDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockHandlerDependencies) EXPECT() *MockHandlerDependenciesMockRecorder {
	return _m.recorder
}

// GetAssetDal mocks base method
func (_m *MockHandlerDependencies) GetAssetDal(_param0 model.AssetDalDependencies) model.AssetDal {
	ret := _m.ctrl.Call(_m, "GetAssetDal", _param0)
	ret0, _ := ret[0].(model.AssetDal)
	return ret0
}

// GetAssetDal indicates an expected call of GetAssetDal
func (_mr *MockHandlerDependenciesMockRecorder) GetAssetDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetDal", arg0)
}

// GetAssetService mocks base method
func (_m *MockHandlerDependencies) GetAssetService(_param0 model.AssetServiceDependencies) model.AssetService {
	ret := _m.ctrl.Call(_m, "GetAssetService", _param0)
	ret0, _ := ret[0].(model.AssetService)
	return ret0
}

// GetAssetService indicates an expected call of GetAssetService
func (_mr *MockHandlerDependenciesMockRecorder) GetAssetService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetService", arg0)
}

// GetConfigDal mocks base method
func (_m *MockHandlerDependencies) GetConfigDal(_param0 model.ConfigDalDependencies) model.ConfigDal {
	ret := _m.ctrl.Call(_m, "GetConfigDal", _param0)
	ret0, _ := ret[0].(model.ConfigDal)
	return ret0
}

// GetConfigDal indicates an expected call of GetConfigDal
func (_mr *MockHandlerDependenciesMockRecorder) GetConfigDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfigDal", arg0)
}

// GetConfigService mocks base method
func (_m *MockHandlerDependencies) GetConfigService(_param0 model.ConfigServiceDependencies) model.ConfigService {
	ret := _m.ctrl.Call(_m, "GetConfigService", _param0)
	ret0, _ := ret[0].(model.ConfigService)
	return ret0
}

// GetConfigService indicates an expected call of GetConfigService
func (_mr *MockHandlerDependenciesMockRecorder) GetConfigService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfigService", arg0)
}

// GetDeserializerJSON mocks base method
func (_m *MockHandlerDependencies) GetDeserializerJSON() json.DeserializerJSON {
	ret := _m.ctrl.Call(_m, "GetDeserializerJSON")
	ret0, _ := ret[0].(json.DeserializerJSON)
	return ret0
}

// GetDeserializerJSON indicates an expected call of GetDeserializerJSON
func (_mr *MockHandlerDependenciesMockRecorder) GetDeserializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDeserializerJSON")
}

// GetEnv mocks base method
func (_m *MockHandlerDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

// GetEnv indicates an expected call of GetEnv
func (_mr *MockHandlerDependenciesMockRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

// GetHandler mocks base method
func (_m *MockHandlerDependencies) GetHandler(_param0 model.HandlerDependencies, _param1 *model.AssetPluginConfig) model.Handler {
	ret := _m.ctrl.Call(_m, "GetHandler", _param0, _param1)
	ret0, _ := ret[0].(model.Handler)
	return ret0
}

// GetHandler indicates an expected call of GetHandler
func (_mr *MockHandlerDependenciesMockRecorder) GetHandler(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetHandler", arg0, arg1)
}

// GetParser mocks base method
func (_m *MockHandlerDependencies) GetParser() procParser.Parser {
	ret := _m.ctrl.Call(_m, "GetParser")
	ret0, _ := ret[0].(procParser.Parser)
	return ret0
}

// GetParser indicates an expected call of GetParser
func (_mr *MockHandlerDependenciesMockRecorder) GetParser() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetParser")
}

// GetReader mocks base method
func (_m *MockHandlerDependencies) GetReader() io.Reader {
	ret := _m.ctrl.Call(_m, "GetReader")
	ret0, _ := ret[0].(io.Reader)
	return ret0
}

// GetReader indicates an expected call of GetReader
func (_mr *MockHandlerDependenciesMockRecorder) GetReader() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetReader")
}

// GetSerializerJSON mocks base method
func (_m *MockHandlerDependencies) GetSerializerJSON() json.SerializerJSON {
	ret := _m.ctrl.Call(_m, "GetSerializerJSON")
	ret0, _ := ret[0].(json.SerializerJSON)
	return ret0
}

// GetSerializerJSON indicates an expected call of GetSerializerJSON
func (_mr *MockHandlerDependenciesMockRecorder) GetSerializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSerializerJSON")
}

// GetServer mocks base method
func (_m *MockHandlerDependencies) GetServer(_param0 io.Reader, _param1 io.Writer) protocol.Server {
	ret := _m.ctrl.Call(_m, "GetServer", _param0, _param1)
	ret0, _ := ret[0].(protocol.Server)
	return ret0
}

// GetServer indicates an expected call of GetServer
func (_mr *MockHandlerDependenciesMockRecorder) GetServer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetServer", arg0, arg1)
}

// GetServiceInit mocks base method
func (_m *MockHandlerDependencies) GetServiceInit() clar.ServiceInit {
	ret := _m.ctrl.Call(_m, "GetServiceInit")
	ret0, _ := ret[0].(clar.ServiceInit)
	return ret0
}

// GetServiceInit indicates an expected call of GetServiceInit
func (_mr *MockHandlerDependenciesMockRecorder) GetServiceInit() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetServiceInit")
}

// GetWriter mocks base method
func (_m *MockHandlerDependencies) GetWriter() io.Writer {
	ret := _m.ctrl.Call(_m, "GetWriter")
	ret0, _ := ret[0].(io.Writer)
	return ret0
}

// GetWriter indicates an expected call of GetWriter
func (_mr *MockHandlerDependenciesMockRecorder) GetWriter() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetWriter")
}

// MockAssetService is a mock of AssetService interface
type MockAssetService struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceMockRecorder
}

// MockAssetServiceMockRecorder is the mock recorder for MockAssetService
type MockAssetServiceMockRecorder struct {
	mock *MockAssetService
}

// NewMockAssetService creates a new mock instance
func NewMockAssetService(ctrl *gomock.Controller) *MockAssetService {
	mock := &MockAssetService{ctrl: ctrl}
	mock.recorder = &MockAssetServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetService) EXPECT() *MockAssetServiceMockRecorder {
	return _m.recorder
}

// Process mocks base method
func (_m *MockAssetService) Process() (*asset.AssetCollection, error) {
	ret := _m.ctrl.Call(_m, "Process")
	ret0, _ := ret[0].(*asset.AssetCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Process indicates an expected call of Process
func (_mr *MockAssetServiceMockRecorder) Process() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Process")
}

// MockAssetServiceFactory is a mock of AssetServiceFactory interface
type MockAssetServiceFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceFactoryMockRecorder
}

// MockAssetServiceFactoryMockRecorder is the mock recorder for MockAssetServiceFactory
type MockAssetServiceFactoryMockRecorder struct {
	mock *MockAssetServiceFactory
}

// NewMockAssetServiceFactory creates a new mock instance
func NewMockAssetServiceFactory(ctrl *gomock.Controller) *MockAssetServiceFactory {
	mock := &MockAssetServiceFactory{ctrl: ctrl}
	mock.recorder = &MockAssetServiceFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetServiceFactory) EXPECT() *MockAssetServiceFactoryMockRecorder {
	return _m.recorder
}

// GetAssetService mocks base method
func (_m *MockAssetServiceFactory) GetAssetService(_param0 model.AssetServiceDependencies) model.AssetService {
	ret := _m.ctrl.Call(_m, "GetAssetService", _param0)
	ret0, _ := ret[0].(model.AssetService)
	return ret0
}

// GetAssetService indicates an expected call of GetAssetService
func (_mr *MockAssetServiceFactoryMockRecorder) GetAssetService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetService", arg0)
}

// MockAssetServiceDependencies is a mock of AssetServiceDependencies interface
type MockAssetServiceDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockAssetServiceDependenciesMockRecorder
}

// MockAssetServiceDependenciesMockRecorder is the mock recorder for MockAssetServiceDependencies
type MockAssetServiceDependenciesMockRecorder struct {
	mock *MockAssetServiceDependencies
}

// NewMockAssetServiceDependencies creates a new mock instance
func NewMockAssetServiceDependencies(ctrl *gomock.Controller) *MockAssetServiceDependencies {
	mock := &MockAssetServiceDependencies{ctrl: ctrl}
	mock.recorder = &MockAssetServiceDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetServiceDependencies) EXPECT() *MockAssetServiceDependenciesMockRecorder {
	return _m.recorder
}

// GetAssetDal mocks base method
func (_m *MockAssetServiceDependencies) GetAssetDal(_param0 model.AssetDalDependencies) model.AssetDal {
	ret := _m.ctrl.Call(_m, "GetAssetDal", _param0)
	ret0, _ := ret[0].(model.AssetDal)
	return ret0
}

// GetAssetDal indicates an expected call of GetAssetDal
func (_mr *MockAssetServiceDependenciesMockRecorder) GetAssetDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetDal", arg0)
}

// GetEnv mocks base method
func (_m *MockAssetServiceDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

// GetEnv indicates an expected call of GetEnv
func (_mr *MockAssetServiceDependenciesMockRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

// GetParser mocks base method
func (_m *MockAssetServiceDependencies) GetParser() procParser.Parser {
	ret := _m.ctrl.Call(_m, "GetParser")
	ret0, _ := ret[0].(procParser.Parser)
	return ret0
}

// GetParser indicates an expected call of GetParser
func (_mr *MockAssetServiceDependenciesMockRecorder) GetParser() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetParser")
}

// MockAssetDal is a mock of AssetDal interface
type MockAssetDal struct {
	ctrl     *gomock.Controller
	recorder *MockAssetDalMockRecorder
}

// MockAssetDalMockRecorder is the mock recorder for MockAssetDal
type MockAssetDalMockRecorder struct {
	mock *MockAssetDal
}

// NewMockAssetDal creates a new mock instance
func NewMockAssetDal(ctrl *gomock.Controller) *MockAssetDal {
	mock := &MockAssetDal{ctrl: ctrl}
	mock.recorder = &MockAssetDalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetDal) EXPECT() *MockAssetDalMockRecorder {
	return _m.recorder
}

// GetAssetData mocks base method
func (_m *MockAssetDal) GetAssetData() (*asset.AssetCollection, error) {
	ret := _m.ctrl.Call(_m, "GetAssetData")
	ret0, _ := ret[0].(*asset.AssetCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetData indicates an expected call of GetAssetData
func (_mr *MockAssetDalMockRecorder) GetAssetData() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetData")
}

// GetBaseBoardInfo mocks base method
func (_m *MockAssetDal) GetBaseBoardInfo() (*asset.AssetBaseBoard, error) {
	ret := _m.ctrl.Call(_m, "GetBaseBoardInfo")
	ret0, _ := ret[0].(*asset.AssetBaseBoard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBaseBoardInfo indicates an expected call of GetBaseBoardInfo
func (_mr *MockAssetDalMockRecorder) GetBaseBoardInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBaseBoardInfo")
}

// GetBiosInfo mocks base method
func (_m *MockAssetDal) GetBiosInfo() (*asset.AssetBios, error) {
	ret := _m.ctrl.Call(_m, "GetBiosInfo")
	ret0, _ := ret[0].(*asset.AssetBios)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBiosInfo indicates an expected call of GetBiosInfo
func (_mr *MockAssetDalMockRecorder) GetBiosInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetBiosInfo")
}

// GetDrivesInfo mocks base method
func (_m *MockAssetDal) GetDrivesInfo() ([]asset.AssetDrive, error) {
	ret := _m.ctrl.Call(_m, "GetDrivesInfo")
	ret0, _ := ret[0].([]asset.AssetDrive)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDrivesInfo indicates an expected call of GetDrivesInfo
func (_mr *MockAssetDalMockRecorder) GetDrivesInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDrivesInfo")
}

// GetInstalledSoftwareInfo mocks base method
func (_m *MockAssetDal) GetInstalledSoftwareInfo() ([]asset.AssetInstalledSoftware, error) {
	ret := _m.ctrl.Call(_m, "GetInstalledSoftwareInfo")
	ret0, _ := ret[0].([]asset.AssetInstalledSoftware)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstalledSoftwareInfo indicates an expected call of GetInstalledSoftwareInfo
func (_mr *MockAssetDalMockRecorder) GetInstalledSoftwareInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetInstalledSoftwareInfo")
}

// GetMemoryInfo mocks base method
func (_m *MockAssetDal) GetMemoryInfo() (*asset.AssetMemory, error) {
	ret := _m.ctrl.Call(_m, "GetMemoryInfo")
	ret0, _ := ret[0].(*asset.AssetMemory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMemoryInfo indicates an expected call of GetMemoryInfo
func (_mr *MockAssetDalMockRecorder) GetMemoryInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMemoryInfo")
}

// GetNetworkInfo mocks base method
func (_m *MockAssetDal) GetNetworkInfo() ([]asset.AssetNetwork, error) {
	ret := _m.ctrl.Call(_m, "GetNetworkInfo")
	ret0, _ := ret[0].([]asset.AssetNetwork)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetworkInfo indicates an expected call of GetNetworkInfo
func (_mr *MockAssetDalMockRecorder) GetNetworkInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetNetworkInfo")
}

// GetOSInfo mocks base method
func (_m *MockAssetDal) GetOSInfo() (*asset.AssetOs, error) {
	ret := _m.ctrl.Call(_m, "GetOSInfo")
	ret0, _ := ret[0].(*asset.AssetOs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOSInfo indicates an expected call of GetOSInfo
func (_mr *MockAssetDalMockRecorder) GetOSInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetOSInfo")
}

// GetSystemInfo mocks base method
func (_m *MockAssetDal) GetSystemInfo() (*asset.AssetSystem, error) {
	ret := _m.ctrl.Call(_m, "GetSystemInfo")
	ret0, _ := ret[0].(*asset.AssetSystem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemInfo indicates an expected call of GetSystemInfo
func (_mr *MockAssetDalMockRecorder) GetSystemInfo() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSystemInfo")
}

// MockAssetDalFactory is a mock of AssetDalFactory interface
type MockAssetDalFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAssetDalFactoryMockRecorder
}

// MockAssetDalFactoryMockRecorder is the mock recorder for MockAssetDalFactory
type MockAssetDalFactoryMockRecorder struct {
	mock *MockAssetDalFactory
}

// NewMockAssetDalFactory creates a new mock instance
func NewMockAssetDalFactory(ctrl *gomock.Controller) *MockAssetDalFactory {
	mock := &MockAssetDalFactory{ctrl: ctrl}
	mock.recorder = &MockAssetDalFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetDalFactory) EXPECT() *MockAssetDalFactoryMockRecorder {
	return _m.recorder
}

// GetAssetDal mocks base method
func (_m *MockAssetDalFactory) GetAssetDal(_param0 model.AssetDalDependencies) model.AssetDal {
	ret := _m.ctrl.Call(_m, "GetAssetDal", _param0)
	ret0, _ := ret[0].(model.AssetDal)
	return ret0
}

// GetAssetDal indicates an expected call of GetAssetDal
func (_mr *MockAssetDalFactoryMockRecorder) GetAssetDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetDal", arg0)
}

// MockAssetDalDependencies is a mock of AssetDalDependencies interface
type MockAssetDalDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockAssetDalDependenciesMockRecorder
}

// MockAssetDalDependenciesMockRecorder is the mock recorder for MockAssetDalDependencies
type MockAssetDalDependenciesMockRecorder struct {
	mock *MockAssetDalDependencies
}

// NewMockAssetDalDependencies creates a new mock instance
func NewMockAssetDalDependencies(ctrl *gomock.Controller) *MockAssetDalDependencies {
	mock := &MockAssetDalDependencies{ctrl: ctrl}
	mock.recorder = &MockAssetDalDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAssetDalDependencies) EXPECT() *MockAssetDalDependenciesMockRecorder {
	return _m.recorder
}

// GetEnv mocks base method
func (_m *MockAssetDalDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

// GetEnv indicates an expected call of GetEnv
func (_mr *MockAssetDalDependenciesMockRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

// GetParser mocks base method
func (_m *MockAssetDalDependencies) GetParser() procParser.Parser {
	ret := _m.ctrl.Call(_m, "GetParser")
	ret0, _ := ret[0].(procParser.Parser)
	return ret0
}

// GetParser indicates an expected call of GetParser
func (_mr *MockAssetDalDependenciesMockRecorder) GetParser() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetParser")
}

// MockConfigServiceFactory is a mock of ConfigServiceFactory interface
type MockConfigServiceFactory struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceFactoryMockRecorder
}

// MockConfigServiceFactoryMockRecorder is the mock recorder for MockConfigServiceFactory
type MockConfigServiceFactoryMockRecorder struct {
	mock *MockConfigServiceFactory
}

// NewMockConfigServiceFactory creates a new mock instance
func NewMockConfigServiceFactory(ctrl *gomock.Controller) *MockConfigServiceFactory {
	mock := &MockConfigServiceFactory{ctrl: ctrl}
	mock.recorder = &MockConfigServiceFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigServiceFactory) EXPECT() *MockConfigServiceFactoryMockRecorder {
	return _m.recorder
}

// GetConfigService mocks base method
func (_m *MockConfigServiceFactory) GetConfigService(_param0 model.ConfigServiceDependencies) model.ConfigService {
	ret := _m.ctrl.Call(_m, "GetConfigService", _param0)
	ret0, _ := ret[0].(model.ConfigService)
	return ret0
}

// GetConfigService indicates an expected call of GetConfigService
func (_mr *MockConfigServiceFactoryMockRecorder) GetConfigService(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfigService", arg0)
}

// MockConfigService is a mock of ConfigService interface
type MockConfigService struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceMockRecorder
}

// MockConfigServiceMockRecorder is the mock recorder for MockConfigService
type MockConfigServiceMockRecorder struct {
	mock *MockConfigService
}

// NewMockConfigService creates a new mock instance
func NewMockConfigService(ctrl *gomock.Controller) *MockConfigService {
	mock := &MockConfigService{ctrl: ctrl}
	mock.recorder = &MockConfigServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigService) EXPECT() *MockConfigServiceMockRecorder {
	return _m.recorder
}

// GetAssetPluginConfMap mocks base method
func (_m *MockConfigService) GetAssetPluginConfMap() (map[string]interface{}, error) {
	ret := _m.ctrl.Call(_m, "GetAssetPluginConfMap")
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetPluginConfMap indicates an expected call of GetAssetPluginConfMap
func (_mr *MockConfigServiceMockRecorder) GetAssetPluginConfMap() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetPluginConfMap")
}

// GetAssetPluginConfig mocks base method
func (_m *MockConfigService) GetAssetPluginConfig() (*model.AssetPluginConfig, error) {
	ret := _m.ctrl.Call(_m, "GetAssetPluginConfig")
	ret0, _ := ret[0].(*model.AssetPluginConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetPluginConfig indicates an expected call of GetAssetPluginConfig
func (_mr *MockConfigServiceMockRecorder) GetAssetPluginConfig() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetPluginConfig")
}

// SetAssetPluginMap mocks base method
func (_m *MockConfigService) SetAssetPluginMap(_param0 map[string]interface{}) error {
	ret := _m.ctrl.Call(_m, "SetAssetPluginMap", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetAssetPluginMap indicates an expected call of SetAssetPluginMap
func (_mr *MockConfigServiceMockRecorder) SetAssetPluginMap(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetAssetPluginMap", arg0)
}

// MockConfigDal is a mock of ConfigDal interface
type MockConfigDal struct {
	ctrl     *gomock.Controller
	recorder *MockConfigDalMockRecorder
}

// MockConfigDalMockRecorder is the mock recorder for MockConfigDal
type MockConfigDalMockRecorder struct {
	mock *MockConfigDal
}

// NewMockConfigDal creates a new mock instance
func NewMockConfigDal(ctrl *gomock.Controller) *MockConfigDal {
	mock := &MockConfigDal{ctrl: ctrl}
	mock.recorder = &MockConfigDalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigDal) EXPECT() *MockConfigDalMockRecorder {
	return _m.recorder
}

// GetAssetPluginConf mocks base method
func (_m *MockConfigDal) GetAssetPluginConf() (*model.AssetPluginConfig, error) {
	ret := _m.ctrl.Call(_m, "GetAssetPluginConf")
	ret0, _ := ret[0].(*model.AssetPluginConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetPluginConf indicates an expected call of GetAssetPluginConf
func (_mr *MockConfigDalMockRecorder) GetAssetPluginConf() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetPluginConf")
}

// GetAssetPluginConfMap mocks base method
func (_m *MockConfigDal) GetAssetPluginConfMap() (map[string]interface{}, error) {
	ret := _m.ctrl.Call(_m, "GetAssetPluginConfMap")
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssetPluginConfMap indicates an expected call of GetAssetPluginConfMap
func (_mr *MockConfigDalMockRecorder) GetAssetPluginConfMap() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAssetPluginConfMap")
}

// SetAssetPluginMap mocks base method
func (_m *MockConfigDal) SetAssetPluginMap(_param0 map[string]interface{}) error {
	ret := _m.ctrl.Call(_m, "SetAssetPluginMap", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetAssetPluginMap indicates an expected call of SetAssetPluginMap
func (_mr *MockConfigDalMockRecorder) SetAssetPluginMap(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetAssetPluginMap", arg0)
}

// MockConfigDalDependencies is a mock of ConfigDalDependencies interface
type MockConfigDalDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockConfigDalDependenciesMockRecorder
}

// MockConfigDalDependenciesMockRecorder is the mock recorder for MockConfigDalDependencies
type MockConfigDalDependenciesMockRecorder struct {
	mock *MockConfigDalDependencies
}

// NewMockConfigDalDependencies creates a new mock instance
func NewMockConfigDalDependencies(ctrl *gomock.Controller) *MockConfigDalDependencies {
	mock := &MockConfigDalDependencies{ctrl: ctrl}
	mock.recorder = &MockConfigDalDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigDalDependencies) EXPECT() *MockConfigDalDependenciesMockRecorder {
	return _m.recorder
}

// GetDeserializerJSON mocks base method
func (_m *MockConfigDalDependencies) GetDeserializerJSON() json.DeserializerJSON {
	ret := _m.ctrl.Call(_m, "GetDeserializerJSON")
	ret0, _ := ret[0].(json.DeserializerJSON)
	return ret0
}

// GetDeserializerJSON indicates an expected call of GetDeserializerJSON
func (_mr *MockConfigDalDependenciesMockRecorder) GetDeserializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDeserializerJSON")
}

// GetEnv mocks base method
func (_m *MockConfigDalDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

// GetEnv indicates an expected call of GetEnv
func (_mr *MockConfigDalDependenciesMockRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

// GetSerializerJSON mocks base method
func (_m *MockConfigDalDependencies) GetSerializerJSON() json.SerializerJSON {
	ret := _m.ctrl.Call(_m, "GetSerializerJSON")
	ret0, _ := ret[0].(json.SerializerJSON)
	return ret0
}

// GetSerializerJSON indicates an expected call of GetSerializerJSON
func (_mr *MockConfigDalDependenciesMockRecorder) GetSerializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSerializerJSON")
}

// GetServiceInit mocks base method
func (_m *MockConfigDalDependencies) GetServiceInit() clar.ServiceInit {
	ret := _m.ctrl.Call(_m, "GetServiceInit")
	ret0, _ := ret[0].(clar.ServiceInit)
	return ret0
}

// GetServiceInit indicates an expected call of GetServiceInit
func (_mr *MockConfigDalDependenciesMockRecorder) GetServiceInit() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetServiceInit")
}

// MockConfigDalFactory is a mock of ConfigDalFactory interface
type MockConfigDalFactory struct {
	ctrl     *gomock.Controller
	recorder *MockConfigDalFactoryMockRecorder
}

// MockConfigDalFactoryMockRecorder is the mock recorder for MockConfigDalFactory
type MockConfigDalFactoryMockRecorder struct {
	mock *MockConfigDalFactory
}

// NewMockConfigDalFactory creates a new mock instance
func NewMockConfigDalFactory(ctrl *gomock.Controller) *MockConfigDalFactory {
	mock := &MockConfigDalFactory{ctrl: ctrl}
	mock.recorder = &MockConfigDalFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigDalFactory) EXPECT() *MockConfigDalFactoryMockRecorder {
	return _m.recorder
}

// GetConfigDal mocks base method
func (_m *MockConfigDalFactory) GetConfigDal(_param0 model.ConfigDalDependencies) model.ConfigDal {
	ret := _m.ctrl.Call(_m, "GetConfigDal", _param0)
	ret0, _ := ret[0].(model.ConfigDal)
	return ret0
}

// GetConfigDal indicates an expected call of GetConfigDal
func (_mr *MockConfigDalFactoryMockRecorder) GetConfigDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfigDal", arg0)
}

// MockConfigServiceDependencies is a mock of ConfigServiceDependencies interface
type MockConfigServiceDependencies struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceDependenciesMockRecorder
}

// MockConfigServiceDependenciesMockRecorder is the mock recorder for MockConfigServiceDependencies
type MockConfigServiceDependenciesMockRecorder struct {
	mock *MockConfigServiceDependencies
}

// NewMockConfigServiceDependencies creates a new mock instance
func NewMockConfigServiceDependencies(ctrl *gomock.Controller) *MockConfigServiceDependencies {
	mock := &MockConfigServiceDependencies{ctrl: ctrl}
	mock.recorder = &MockConfigServiceDependenciesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockConfigServiceDependencies) EXPECT() *MockConfigServiceDependenciesMockRecorder {
	return _m.recorder
}

// GetConfigDal mocks base method
func (_m *MockConfigServiceDependencies) GetConfigDal(_param0 model.ConfigDalDependencies) model.ConfigDal {
	ret := _m.ctrl.Call(_m, "GetConfigDal", _param0)
	ret0, _ := ret[0].(model.ConfigDal)
	return ret0
}

// GetConfigDal indicates an expected call of GetConfigDal
func (_mr *MockConfigServiceDependenciesMockRecorder) GetConfigDal(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfigDal", arg0)
}

// GetDeserializerJSON mocks base method
func (_m *MockConfigServiceDependencies) GetDeserializerJSON() json.DeserializerJSON {
	ret := _m.ctrl.Call(_m, "GetDeserializerJSON")
	ret0, _ := ret[0].(json.DeserializerJSON)
	return ret0
}

// GetDeserializerJSON indicates an expected call of GetDeserializerJSON
func (_mr *MockConfigServiceDependenciesMockRecorder) GetDeserializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDeserializerJSON")
}

// GetEnv mocks base method
func (_m *MockConfigServiceDependencies) GetEnv() env.Env {
	ret := _m.ctrl.Call(_m, "GetEnv")
	ret0, _ := ret[0].(env.Env)
	return ret0
}

// GetEnv indicates an expected call of GetEnv
func (_mr *MockConfigServiceDependenciesMockRecorder) GetEnv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnv")
}

// GetSerializerJSON mocks base method
func (_m *MockConfigServiceDependencies) GetSerializerJSON() json.SerializerJSON {
	ret := _m.ctrl.Call(_m, "GetSerializerJSON")
	ret0, _ := ret[0].(json.SerializerJSON)
	return ret0
}

// GetSerializerJSON indicates an expected call of GetSerializerJSON
func (_mr *MockConfigServiceDependenciesMockRecorder) GetSerializerJSON() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSerializerJSON")
}

// GetServiceInit mocks base method
func (_m *MockConfigServiceDependencies) GetServiceInit() clar.ServiceInit {
	ret := _m.ctrl.Call(_m, "GetServiceInit")
	ret0, _ := ret[0].(clar.ServiceInit)
	return ret0
}

// GetServiceInit indicates an expected call of GetServiceInit
func (_mr *MockConfigServiceDependenciesMockRecorder) GetServiceInit() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetServiceInit")
}
